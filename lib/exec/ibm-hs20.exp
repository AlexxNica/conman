#!/usr/bin/expect -f
###############################################################################
# $Id$
###############################################################################
# Copyright (C) 2001-2007 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory.
# Written by Chris Dunlap <cdunlap@llnl.gov>.
# UCRL-CODE-2002-009.
#
# This file is part of ConMan: The Console Manager.
# For details, see <http://home.gna.org/conman/>.
###############################################################################
# This script performs the initial authentication step to access a console on
# an IBM BladeCenter HS20 Type 8843 blade server using the telnet protocol.
#
# This script can be specified in "conman.conf" in the following manner:
#
#   CONSOLE name="zot" dev="/path/to/ibm-hs20.exp HOST PORT USER PSWD"
#
# HOST is the hostname of the blade server.
# PORT is the port number associated with the console.
# USER is the username being authenticated.
# PSWD is the corresponding password.
#
# Since this command-line will persist in the process listing for the duration
# of the connection, passing the USER & PSWD in this manner is not recommended.
###############################################################################

##
# Command-line arguments can be overridden by uncommenting the lines below
#   to specify the username and password for the initial authentication step.
##
  set host [ lindex $argv 0 ]
  set port [ lindex $argv 1 ]
  set user [ lindex $argv 2 ]
  set pswd [ lindex $argv 3 ]
# set user "foo"
# set pswd "bar"

##
# Set "exp_internal" to 1 to print diagnostics describing internal operations.
#   This is helpful in diagnosing pattern-match failures.
##
  exp_internal 0

##
# Set "log_user" to 1 to show the underlying dialogue that takes place during
#   the initial authentication step.
##
  log_user 0

##
# The "timeout" specifies the number of seconds before the authentication step
#   times-out and terminates the connection.
##
  set timeout 10

if [ catch "spawn telnet $host" reason ] {
  send_user "Error: failed to spawn telnet process: $reason.\r\n"
  exit 1
}
expect {
  -gl "Invalid login" {
    send_user "Error: Permission denied.\r\n"
    exit 1
  }
  -gl "Command not recognized" {
    send_user "Error: Command not recognized.\r\n"
    exit 1
  }
  -gl "Invalid target path" {
    send_user "Error: Invalid blade name.\r\n"
    exit 1
  }
  -gl "The target bay is out of range" {
    send_user "Error: Invalid blade number.\r\n"
    exit 1
  }
  -gl "SOL session is already active" {
    send_user "Error: Console session already in use.\r\n"
    exit 1
  }
  eof {
    send_user "Error: Connection closed by remote host.\r\n"
    exit 1
  }
  timeout {
    send_user "Error: Timed-out.\r\n"
    exit 1
  }
  -gl "username: \$" {
    send "$user\r"
    exp_continue -continue_timer
  }
  -gl "password: \$" {
    send "$pswd\r"
    exp_continue -continue_timer
  }
  -gl "system> \$" {
    send "console -T blade\[$blade]\r"
    exp_continue -continue_timer
  }
  -gl "\u001b\\\[2J" {
    ;
  }
}
send_user "Connection established via external telnet process.\r\n"
##
# The "&B" character sequence will be replaced with a serial-break.
# The space-backspace sequence will be sent after an hour with no input
#   activity in order to keep the connection alive.  Without it, the blade
#   server terminates connections that have been idle for ~63min.
##
interact {
  "&B" {
    send "\035send brk\r\n"
  }
  timeout 3600 {
    send " \177"
  }
}
