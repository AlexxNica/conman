#!/usr/bin/expect -f
###############################################################################
# $Id$
###############################################################################
# Copyright (C) 2001-2007 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory.
# Written by Chris Dunlap <cdunlap@llnl.gov>.
# UCRL-CODE-2002-009.
#
# This file is part of ConMan: The Console Manager.
# For details, see <http://home.gna.org/conman/>.
###############################################################################
# This script performs the initial authentication step to access a console on
# an IBM BladeCenter HS20 Type 8843 blade server using the telnet protocol.
#
# This script can be specified in "conman.conf" in the following manner:
#
#   CONSOLE name="zot" dev="/path/to/ibm-hs20.exp HOST BLADE USER PSWD"
#
# HOST  is the hostname of the blade server.
# BLADE is the blade number associated with the console.
# USER  is the username being authenticated.
# PSWD  is the corresponding password.
#
# Since this command-line will persist in the process listing for the duration
# of the connection, passing USER/PSWD in this manner is not recommended.
###############################################################################

##
# Set "exp_internal" to 1 to print diagnostics describing internal operations.
#   This is helpful in diagnosing pattern-match failures.
##
  exp_internal 0

##
# Set "log_user" to 1 to show the underlying dialogue that takes place during
#   the initial authentication step.
##
  log_user 0

##
# The "timeout" specifies the number of seconds before the authentication step
#   times-out and terminates the connection.
##
  set timeout 10

##
# Command-line argument defaults should be specified here.  In this manner,
#   you can avoid exposing sensitive information on the command line.
##
# set user "foo"
# set pswd "bar"

##

set env(PATH) "/bin:/usr/bin"
set connected 0

if { ! $argc } {
  set prog [ lindex [ split $argv0 "/" ] end ]
  send_user "Usage: $prog <host> <blade> <user> <pswd>\r\n"
  exit 1
}
if { $argc > 0 } {
  set host [ lindex $argv 0 ]
}
if { $argc > 1 } {
  set blade [ lindex $argv 1 ]
}
if { $argc > 2 } {
  set user [ lindex $argv 2 ]
}
if { $argc > 3 } {
  set pswd [ lindex $argv 3 ]
}
if { ! [ info exists host ] } {
  send_user "Error: Unspecified hostname.\r\n"
  exit 1
} elseif { ! [ info exists blade ] } {
  send_user "Error: Unspecified blade number.\r\n"
  exit 1
} elseif { ! [ info exists user ] } {
  send_user "Error: Unspecified username.\r\n"
  exit 1
} elseif { ! [ info exists pswd ] } {
  send_user "Error: Unspecified password.\r\n"
  exit 1
}
if [ catch "spawn telnet $host" reason ] {
  send_user "Error: failed to spawn telnet process: $reason.\r\n"
  exit 1
}
expect {
  -gl "Invalid login" {
    send_user "Error: Permission denied.\r\n"
    exit 1
  }
  -gl "Command not recognized" {
    send_user "Error: Command not recognized.\r\n"
    exit 1
  }
  -gl "Invalid target path" {
    send_user "Error: Invalid blade name.\r\n"
    exit 1
  }
  -gl "The target bay is out of range" {
    send_user "Error: Invalid blade number.\r\n"
    exit 1
  }
  -gl "SOL session is already active" {
    send_user "Error: Console session already in use.\r\n"
    exit 1
  }
  eof {
    send_user "Error: Connection closed by remote host.\r\n"
    exit 1
  }
  timeout {
    if {$connected == 0} {
      send_user "Error: Timed-out.\r\n"
      exit 1
    }
  }
  -nocase -gl "username: \$" {
    if {$connected == 0} {
      send "$user\r"
      exp_continue -continue_timer
    }
  }
  -nocase -gl "password: \$" {
    if {$connected == 0} {
      send "$pswd\r"
      exp_continue -continue_timer
    }
  }
  -nocase -gl "system> \$" {
    if {$connected == 0} {
      send "console -T blade\[$blade]\r"
      incr connected
      exp_continue -continue_timer
    } else {
      send_user "Error: Unexpected response.\r\n"
      exit 1
    }
  }
  -gl "\u001b\\\[2J" {
    ;
  }
  -re "\[^\r]*\r\n" {
    exp_continue -continue_timer
  }
}
send_user "Connection established via external telnet process.\r\n"
##
# The "&B" character sequence will be replaced with a serial-break.
# The space-backspace sequence will be sent after an hour with no input
#   activity in order to keep the connection alive.  Without it, the blade
#   server terminates connections that have been idle for ~63min.
##
interact {
  "&B" {
    send "\035send brk\r\n"
  }
  timeout 3600 {
    send " \177"
  }
}
